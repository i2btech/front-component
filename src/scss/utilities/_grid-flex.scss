$gutter-width: map-get(map-get($theme, 'gutter'), 'width');
$container-breakpoints: map-get($theme, 'screens');
$grid-columns: map-get($theme, 'columns');
$grid-breakpoints: $container-breakpoints;

.container-fluid {
  @include make-container($gutter-width);
}

@each $bp, $mw in $container-breakpoints {
	$infix: breakpoint-infix($bp, $container-breakpoints);

	.#{$infix}container {
		@include make-container($gutter-width);
	}

	@include media-breakpoint-up($bp) {

		// Extend each breakpoint which is smaller or equal to the current breakpoint
		$extend-breakpoint: true;

		@each $name, $width in $container-breakpoints {
			$infix: breakpoint-infix($name, $container-breakpoints);

			@if ($extend-breakpoint) {
				@if($mw > 0) {
					.#{$infix}container {
						max-width: $mw;
					}
				}

				// Once the current breakpoint is reached, stop extending
				@if ($bp == $name) {
					$extend-breakpoint: false;
				}
			}
		}
	}
}

// Row
//
// Rows contain and clear the floats of your columns.

.row {
	@include make-row-flex($gutter-width);
}

// Remove the negative margin from default .row, then the horizontal padding
// from all immediate children columns (to prevent runaway style inheritance).
.no-gutters {
	margin-right: 0;
	margin-left: 0;
	>.col,
	>[class*="col-"] {
		padding-right: 0;
		padding-left: 0;
	}
}

// Columns
//
// Common styles for small and large grid columns

@include make-grid-columns($grid-columns, $gutter-width, $grid-breakpoints);
